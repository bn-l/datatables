{"name":"createSort","text":"createSort(field: Field<T>): SortBuilder<T>","returnType":"SortBuilder<T>","args":[{"name":"field","type":"Field<T>","text":"field: Field<T>"}],"ast":{"name":"createSort","kind":"Method","signatures":[{"return":{"type":{"text":"SortBuilder<T>","kind":"Reference","typeArguments":[{"text":"T","kind":"Reference","source":{"line":20,"path":"..\\datatables\\src\\lib\\src\\server\\TableHandler.svelte.ts"}}]}},"line":79,"parameters":[{"name":"field","type":{"text":"Field<T>","kind":"Reference","typeArguments":[{"text":"T","kind":"Reference","source":{"line":20,"path":"..\\datatables\\src\\lib\\src\\server\\TableHandler.svelte.ts"}}]},"line":79}]}]},"ext":{"properties":[{"name":"isActive","text":"type $derived<boolean>","type":"$derived<boolean>","ast":{"name":"isActive","kind":"Property","type":{"text":"any","kind":"Intrinsic"},"line":8,"default":"$derived<boolean>(this.createIsActive())"}},{"name":"direction","text":"type $derived<'asc' | 'desc'>","type":"$derived<'asc' | 'desc'>","ast":{"name":"direction","kind":"Property","type":{"text":"any","kind":"Intrinsic"},"line":9,"default":"$derived<'asc' | 'desc'>(this.createDirection())"}}],"methods":[{"name":"set","text":"set(): void","returnType":"void","args":[],"ast":{"name":"set","kind":"Method","signatures":[{"return":{"type":{"text":"void","kind":"Intrinsic"}},"line":17}]}},{"name":"init","text":"init(direction?: 'asc' | 'desc' | undefined): SortBuilder<Row>","returnType":"SortBuilder<Row>","args":[{"name":"direction","type":"'asc' | 'desc' | undefined","text":"direction?: 'asc' | 'desc' | undefined","optional":true}],"ast":{"name":"init","kind":"Method","signatures":[{"return":{"type":{"text":"SortBuilder<Row>","kind":"Reference","source":{"line":4,"path":"..\\datatables\\src\\lib\\src\\server\\builders\\SortBuilder.svelte.ts"},"typeArguments":[{"text":"Row","kind":"Reference","source":{"line":4,"path":"..\\datatables\\src\\lib\\src\\server\\builders\\SortBuilder.svelte.ts"}}]}},"line":22,"parameters":[{"name":"direction","type":{"text":"\"asc\" | \"desc\" | undefined","kind":"Union","elements":[{"text":"\"asc\"","kind":"Literal"},{"text":"\"desc\"","kind":"Literal"},{"text":"undefined","kind":"Intrinsic"}]},"line":22,"optional":true}]}]}},{"name":"asc","text":"asc(): void","returnType":"void","args":[],"ast":{"name":"asc","kind":"Method","signatures":[{"return":{"type":{"text":"void","kind":"Intrinsic"}},"line":29}]}},{"name":"desc","text":"desc(): void","returnType":"void","args":[],"ast":{"name":"desc","kind":"Method","signatures":[{"return":{"type":{"text":"void","kind":"Intrinsic"}},"line":34}]}}]},"markdown":"\n<p>Create a new sort for 1 column.</p>\n<h2>Usage</h2>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> sort <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">createSort</span><span class=\"token punctuation\">(</span><span class=\"token string\">'last_name'</span><span class=\"token punctuation\">)</span></code></pre>\n<pre class=\"language-svelte\"><code class=\"language-svelte\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span> <span class=\"token attr-name\">class=</span><span class=\"token language-javascript\"><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">active</span><span class=\"token operator\">:</span> sort<span class=\"token punctuation\">.</span>isActive <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick=</span><span class=\"token language-javascript\"><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> sort<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span>\n        Last name\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class=</span><span class=\"token language-javascript\"><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">asc</span><span class=\"token operator\">:</span> sort<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">===</span> <span class=\"token string\">'asc'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> \n            <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">desc</span><span class=\"token operator\">:</span> sort<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">===</span> <span class=\"token string\">'desc'</span> <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2>Working with nested props</h2>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> sort <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">createSort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> row<span class=\"token punctuation\">.</span>nested<span class=\"token punctuation\">.</span>prop<span class=\"token punctuation\">)</span></code></pre>\n"}